
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."gender" AS ENUM (
    'Male',
    'Female',
    'Other',
    'Unknown'
);

ALTER TYPE "public"."gender" OWNER TO "postgres";

CREATE TYPE "public"."meeting_location" AS ENUM (
    'Office',
    'ClientHouse',
    'FreelanceOffice',
    'FreelanceHouse'
);

ALTER TYPE "public"."meeting_location" OWNER TO "postgres";

CREATE TYPE "public"."weighing_type" AS ENUM (
    'Automatic',
    'Manual'
);

ALTER TYPE "public"."weighing_type" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."device" (
    "id" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "factory_name" character varying,
    "pretty_name" character varying,
    "data" "json",
    "active" boolean DEFAULT true
);

ALTER TABLE "public"."device" OWNER TO "postgres";

ALTER TABLE "public"."device" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."device_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."meeting_summary" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "meeting_id" bigint,
    "text" "text",
    "suggestion" "text"
);

ALTER TABLE "public"."meeting_summary" OWNER TO "postgres";

ALTER TABLE "public"."meeting_summary" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."meeting_summary_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."meetings" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "patient_id" integer,
    "start_time" timestamp with time zone,
    "end_time" timestamp with time zone,
    "active" boolean NOT NULL,
    "location" "public"."meeting_location"
);

ALTER TABLE "public"."meetings" OWNER TO "postgres";

ALTER TABLE "public"."meetings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."meetings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."patient_addresses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "patient_id" integer,
    "address" "text",
    "email" character varying,
    "phone" character varying
);

ALTER TABLE "public"."patient_addresses" OWNER TO "postgres";

ALTER TABLE "public"."patient_addresses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."patient_addresses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."patient_physique" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "patient_id" integer,
    "weight" real,
    "height" real,
    "activity_level" smallint
);

ALTER TABLE "public"."patient_physique" OWNER TO "postgres";

ALTER TABLE "public"."patient_physique" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."patient_physique_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."patients" (
    "id" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "eng_name" character varying DEFAULT ''::character varying,
    "first_name" character varying DEFAULT ''::character varying,
    "last_name" character varying DEFAULT ''::character varying,
    "gender" "public"."gender" DEFAULT 'Unknown'::"public"."gender",
    "type" smallint DEFAULT '0'::smallint,
    "date_of_birth" timestamp with time zone,
    "updated_at" timestamp with time zone DEFAULT "now"()
);

ALTER TABLE "public"."patients" OWNER TO "postgres";

ALTER TABLE "public"."patients" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."patients_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."weighing" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "patient_id" integer,
    "meeting_id" bigint,
    "data" "json",
    "type" "public"."weighing_type",
    "external_id" bigint,
    "device_id" integer
);

ALTER TABLE "public"."weighing" OWNER TO "postgres";

ALTER TABLE "public"."weighing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."weighing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."device"
    ADD CONSTRAINT "device_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."meeting_summary"
    ADD CONSTRAINT "meeting_summary_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."meetings"
    ADD CONSTRAINT "meetings_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."patient_addresses"
    ADD CONSTRAINT "patient_addresses_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."patient_physique"
    ADD CONSTRAINT "patient_physique_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."patients"
    ADD CONSTRAINT "patients_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."patients"
    ADD CONSTRAINT "patients_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."weighing"
    ADD CONSTRAINT "weighing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."meeting_summary"
    ADD CONSTRAINT "public_meeting_summary_meeting_id_fkey" FOREIGN KEY ("meeting_id") REFERENCES "public"."meetings"("id");

ALTER TABLE ONLY "public"."meetings"
    ADD CONSTRAINT "public_meetings_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "public"."patients"("id");

ALTER TABLE ONLY "public"."patient_addresses"
    ADD CONSTRAINT "public_patient_addresses_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "public"."patients"("id");

ALTER TABLE ONLY "public"."patient_physique"
    ADD CONSTRAINT "public_patient_physique_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "public"."patients"("id");

ALTER TABLE ONLY "public"."weighing"
    ADD CONSTRAINT "public_weighing_device_id_fkey" FOREIGN KEY ("device_id") REFERENCES "public"."device"("id");

ALTER TABLE ONLY "public"."weighing"
    ADD CONSTRAINT "public_weighing_meeting_id_fkey" FOREIGN KEY ("meeting_id") REFERENCES "public"."meetings"("id");

ALTER TABLE ONLY "public"."weighing"
    ADD CONSTRAINT "public_weighing_patient_id_fkey" FOREIGN KEY ("patient_id") REFERENCES "public"."patients"("id");

ALTER TABLE "public"."device" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."meeting_summary" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."meetings" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."patient_addresses" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."patient_physique" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."patients" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."weighing" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."patients";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."weighing";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."device" TO "anon";
GRANT ALL ON TABLE "public"."device" TO "authenticated";
GRANT ALL ON TABLE "public"."device" TO "service_role";

GRANT ALL ON SEQUENCE "public"."device_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."device_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."device_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."meeting_summary" TO "anon";
GRANT ALL ON TABLE "public"."meeting_summary" TO "authenticated";
GRANT ALL ON TABLE "public"."meeting_summary" TO "service_role";

GRANT ALL ON SEQUENCE "public"."meeting_summary_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."meeting_summary_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."meeting_summary_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."meetings" TO "anon";
GRANT ALL ON TABLE "public"."meetings" TO "authenticated";
GRANT ALL ON TABLE "public"."meetings" TO "service_role";

GRANT ALL ON SEQUENCE "public"."meetings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."meetings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."meetings_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."patient_addresses" TO "anon";
GRANT ALL ON TABLE "public"."patient_addresses" TO "authenticated";
GRANT ALL ON TABLE "public"."patient_addresses" TO "service_role";

GRANT ALL ON SEQUENCE "public"."patient_addresses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."patient_addresses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."patient_addresses_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."patient_physique" TO "anon";
GRANT ALL ON TABLE "public"."patient_physique" TO "authenticated";
GRANT ALL ON TABLE "public"."patient_physique" TO "service_role";

GRANT ALL ON SEQUENCE "public"."patient_physique_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."patient_physique_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."patient_physique_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."patients" TO "anon";
GRANT ALL ON TABLE "public"."patients" TO "authenticated";
GRANT ALL ON TABLE "public"."patients" TO "service_role";

GRANT ALL ON SEQUENCE "public"."patients_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."patients_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."patients_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."weighing" TO "anon";
GRANT ALL ON TABLE "public"."weighing" TO "authenticated";
GRANT ALL ON TABLE "public"."weighing" TO "service_role";

GRANT ALL ON SEQUENCE "public"."weighing_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."weighing_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."weighing_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
